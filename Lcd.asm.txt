;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*              MODIFICAÇÕES PARA USO COM 12F675                   *
;*                FEITAS PELO PROF. MARDSON                        *
;*                    FEVEREIRO DE 2016                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       NOME DO PROJETO                           *
;*                           CLIENTE                               *
;*         DESENVOLVIDO PELA MOSAICO ENGENHARIA E CONSULTORIA      *
;*   VERSÃO: 1.0                           DATA: 17/06/03          *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     DESCRIÇÃO DO ARQUIVO                        *
;*-----------------------------------------------------------------*
;*   MODELO PARA O PIC 12F675                                      *
;*                                                                 *
;*                                                                 *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ARQUIVOS DE DEFINIÇÕES                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#INCLUDE <p12f675.inc>	;ARQUIVO PADRÃO MICROCHIP PARA 12F675

	__CONFIG _BODEN_OFF & _CP_OFF & _PWRTE_ON & _WDT_OFF & _MCLRE_ON & _INTRC_OSC_NOCLKOUT

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    PAGINAÇÃO DE MEMÓRIA                         *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;DEFINIÇÃO DE COMANDOS DE USUÁRIO PARA ALTERAÇÃO DA PÁGINA DE MEMÓRIA
#DEFINE	BANK0	BCF STATUS,RP0	;SETA BANK 0 DE MEMÓRIA
#DEFINE	BANK1	BSF STATUS,RP0	;SETA BANK 1 DE MAMÓRIA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         VARIÁVEIS                               *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DOS NOMES E ENDEREÇOS DE TODAS AS VARIÁVEIS UTILIZADAS 
; PELO SISTEMA

	CBLOCK	0x20	;ENDEREÇO INICIAL DA MEMÓRIA DE
					;USUÁRIO
		W_TEMP		;REGISTRADORES TEMPORÁRIOS PARA USO
		STATUS_TEMP	;JUNTO ÀS INTERRUPÇÕES

		;NOVAS VARIÁVEIS

	ENDC			;FIM DO BLOCO DE MEMÓRIA
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                        FLAGS INTERNOS                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS FLAGS UTILIZADOS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         CONSTANTES                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODAS AS CONSTANTES UTILIZADAS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           ENTRADAS                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO ENTRADA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           SAÍDAS                                *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO SAÍDA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)
	#DEFINE	    LCD_EN	GPIO,GP5;HABILITA O SINALK DE LEITURA E ESCRITA DO LCD
	;QUANDO ALGO FOR MANDADO PARA O LCD É PRECISO DEIXAR ELE ALTO PARA QUE O LCD POSSA RECEBER OS DADOS 
	#DEFINE	    SRDAT	GPIO,GP4;É RESPONSAVEL PELO DADO QUE SERÁ ENVIADO PARA O
	#DEFINE	    SRCLK	GPIO,GP0;RESPONSAVEL PELO CLOCK Q SERÁ ENVIADO PARA O SHIFT(REGISTRADOR)
	

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       VETOR DE RESET                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	ORG	0x00			;ENDEREÇO INICIAL DE PROCESSAMENTO
	GOTO	INICIO
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    INÍCIO DA INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; ENDEREÇO DE DESVIO DAS INTERRUPÇÕES. A PRIMEIRA TAREFA É SALVAR OS
; VALORES DE "W" E "STATUS" PARA RECUPERAÇÃO FUTURA

	ORG	0x04			;ENDEREÇO INICIAL DA INTERRUPÇÃO
	MOVWF	W_TEMP		;COPIA W PARA W_TEMP
	SWAPF	STATUS,W
	MOVWF	STATUS_TEMP	;COPIA STATUS PARA STATUS_TEMP

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    ROTINA DE INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; AQUI SERÁ ESCRITA AS ROTINAS DE RECONHECIMENTO E TRATAMENTO DAS
; INTERRUPÇÕES

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                 ROTINA DE SAÍDA DA INTERRUPÇÃO                  *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; OS VALORES DE "W" E "STATUS" DEVEM SER RECUPERADOS ANTES DE 
; RETORNAR DA INTERRUPÇÃO

SAI_INT
	SWAPF	STATUS_TEMP,W
	MOVWF	STATUS		;MOVE STATUS_TEMP PARA STATUS
	SWAPF	W_TEMP,F
	SWAPF	W_TEMP,W	;MOVE W_TEMP PARA W
	RETFIE

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*	            	 ROTINAS E SUBROTINAS                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; CADA ROTINA OU SUBROTINA DEVE POSSUIR A DESCRIÇÃO DE FUNCIONAMENTO
; E UM NOME COERENTE ÀS SUAS FUNÇÕES.
;COMO NOS DEFINIMOS O VALOR 25? DA SEGUINTE FORMA: 100US/(PRESCALER=4)=25
DELAY_100US
	MOVLW	.231	;(256-25=231)
	MOVWF	TMR0; 25*4=100US
	BCF INTCON,T0IF; ZERA O T0IF POR SEGURANÇA
VOLTA1
	BTFSS	INTCON,T0IF;LOOP QUE ESPERA SETAR O T0IF
	GOTO	VOLTA1
	NOP
	NOP
	NOP
	RETURN
;COMO NOS DEFINIMOS O VALOR 10? DA SEGUINTE FORMA: 40US/(PRESCALER=4)=10
DELAY_40US
	MOVLW	.247	;(256-10=246)
	MOVWF	TMR0;10*4=40 US
	BCF INTCON,T0IF; ZERA O T0IF POR SEGURANÇA
VOLTA2
	BTFSS	INTCON,T0IF;LOOP QUE ESPERA SETAR O T0IF
	GOTO	VOLTA2
	RETURN
DELAY_15MS
	;ZERANDO OS TMR1L E TMR1H
	CLRF	TMR1H
	CLRF	TMR1L
	;COMO NOS DEFINIMOS O VALOR 1875? DA SEGUINTE FORMA: 15000MS/(PRESCALER=8)=1875
	MOVLW	B'11111000'	;(65536-1875)
	MOVWF	TMR1H	;(1875*8=15000)
	MOVLW	B'10101101';PARA ISSO DIVIDE OS 16BITS EM 8 EM CASA 
	MOVWF	TMR1L
	BCF PIR1,TMR1IF;ZERA O TMR1IF POR SEGURANÇA
	BTFSS	PIR1,TMR1IF;LOOP ESPERANDO SETAR O TMR1IF
	GOTO	$-1
	RETURN
DELAY_4MS
	;ZERANDO OS TMR1L E TMR1H
	CLRF	TMR1H
	CLRF	TMR1L
	;COMO NOS DEFINIMOS O VALOR 1875? DA SEGUINTE FORMA: 4000MS/(PRESCALER=8)=500
	MOVLW	B'11111110'	;(65536-500)
	MOVWF	TMR1H	;(500*8=4000)
	MOVLW	B'00001100';PARA ISSO DIVIDE OS 16BITS EM 8 EM CASA 
	MOVWF	TMR1L
	BCF PIR1,TMR1IF;ZERA O TMR1IF POR SEGURANÇA
	BTFSS	PIR1,TMR1IF;LOOP ESPERANDO SETAR O TMR1IF
	GOTO	$-1
	RETURN
DELAY_165MS
	;ZERANDO OS TMR1L E TMR1H
	CLRF	TMR1H
	CLRF	TMR1L
	;COMO NOS DEFINIMOS O VALOR 1875? DA SEGUINTE FORMA: 1650MS/(PRESCALER=8)=207
	MOVLW	B'11111111'	;(65536-207=65329)
	MOVWF	TMR1H	;(207*8=1650)
	MOVLW	B'00110001';PARA ISSO DIVIDE OS 16BITS EM 8 EM CASA 
	MOVWF	TMR1L
	BCF PIR1,TMR1IF;ZERA O TMR1IF POR SEGURANÇA
	BTFSS	PIR1,TMR1IF;LOOP ESPERANDO SETAR O TMR1IF
	GOTO	$-1
	RETURN
;INICIALIZAÇÃO DO LCD
INIT
	;PRIMEIRA INSTRUÇÃO
	
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	
	
	;----------DB7-------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	;----------DELAY--------
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;---------------------------segunda instrução-----------------------------------------------------
	
	;----------DB7-------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	;----------DELAY100----------
	CALL	DELAY_100US
	CALL	DELAY_100US
	;----------------TERCEIRA INSTRUÇÃO----------------------------------
	
	
	;----------DB7-------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	;----------DELAY100US---------
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;-----------------QUARTA INSTRUÇÃO--------------------------------
	
	
	
	;----------DB7-------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BCF	SRDAT;0 mudeiiiiiiiiiiiiiiiiiiiiii<----------------------
	CALL	TIMER_CLOCK
	;----------RS--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	
	
	;---------DELAY40US---------
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;-------------------QUINTA INSTRUÇÃO---1----------------------
	;----------DB7-------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;--------------------
	;---------------QUINTA INSTRUÇÃO PARTE 2------------------------
	
	;----------DB7-------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB4----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	;----------DELAY40US------------
	
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;--------------------SEXTA INSTRUÇÃO-------------------
	
	
	;----------DB7-------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;----------------------
	
	;-------------------------SEXTA INSTRUÇÃO PARTE 2-----------------------
	;----------DB7-------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB5----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	CALL	ENABLE
	;----------40US------------
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;--------------------SETIMA INSTRUÇÃO--------------------------
	;----------DB7-------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	;---------2MS-------------
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;---------------------SETIMA INSTRUÇÃO 2-------------------------
	;----------DB7-------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	;-------------------------
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;--------------------OITAVA INSTRUÇÃO------------------
	;----------DB7-------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	;----------40US-------------
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;------------------------ OITAVA INSTRUÇÃO 2----------------------
	;----------DB7-------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	RETURN
;SUBROTINA DO PULSO DO CLOCK	
TIMER_CLOCK
	BSF	SRCLK
	BCF	SRCLK
	RETURN
;SUBROTINA DO ESTADO DO ENABLE
ENABLE
	BSF	LCD_EN
	BCF	LCD_EN
	RETURN
LETRA_A
	;-------------------ESCREVENDO O BIT MAIS SIGNIFICATIVO DE A
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;----------DB7-------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;---------------ESCREVENDO O BIT MENOS SIGNIFICATIVO DE A-----------------------
	;----------DB7-------
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	RETURN
LETRA_N
	;-------------------ESCREVENDO O BIT MAIS SIGNIFICATIVO DE N
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;----------DB7-------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;---------------ESCREVENDO O BIT MENOS SIGNIFICATIVO DE N-----------------------
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;----------DB7-------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	RETURN
LETRA_D
	;-------------------ESCREVENDO O BIT MAIS SIGNIFICATIVO DE D
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;----------DB7-------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;---------------ESCREVENDO O BIT MENOS SIGNIFICATIVO DE D-----------------------
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;----------DB7-------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	RETURN
LETRA_R
	;-------------------ESCREVENDO O BIT MAIS SIGNIFICATIVO DE R
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;----------DB7-------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;---------------ESCREVENDO O BIT MENOS SIGNIFICATIVO DE R-----------------------
	;----------DB7-------
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	RETURN
LETRA_E
	;-------------------ESCREVENDO O BIT MAIS SIGNIFICATIVO DE E
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;----------DB7-------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;---------------ESCREVENDO O BIT MENOS SIGNIFICATIVO DE E-----------------------
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;----------DB7-------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	RETURN
LETRA_a
	;-------------------ESCREVENDO O BIT MAIS SIGNIFICATIVO DE a
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;----------DB7-------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;---------------ESCREVENDO O BIT MENOS SIGNIFICATIVO DE a-----------------------
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	;----------DB7-------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;-----------DB6----------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------DB5----------
	BCF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------DB4----------
	BSF	SRDAT;1
	CALL	TIMER_CLOCK
	;----------RS--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------BACK--------
	BSF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	;----------X--------
	BCF	SRDAT;0
	CALL	TIMER_CLOCK
	CALL	ENABLE
	CALL	DELAY_15MS
	CALL	DELAY_15MS
	RETURN

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIO DO PROGRAMA                          *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
INICIO
	BANK1				;ALTERA PARA O BANCO 1
	MOVLW	B'00000000' ;CONFIGURA TODAS AS PORTAS DO GPIO (PINOS)
	MOVWF	TRISIO		;COMO SAÍDAS
	CLRF	ANSEL 		;DEFINE PORTAS COMO Digital I/O
	MOVLW	B'00000001' ;definindo prescale de 1:4
	MOVWF	OPTION_REG	;DEFINE OPÇÕES DE OPERAÇÃO
	MOVLW	B'00000000'
	MOVWF	INTCON		;DEFINE OPÇÕES DE INTERRUPÇÕES
	
	  
	BANK0				;RETORNA PARA O BANCO
	MOVLW	B'00000111'
	MOVWF	CMCON		;DEFINE O MODO DE OPERAÇÃO DO COMPARADOR ANALÓGICO
	MOVLW	B'00110001' ;DEFININDO O PRESCALER DE 1;8 NO TIMER1 (BITS 4 E 5)
	MOVWF	T1CON	;REGISTRADOR DE CONTROLE DO TIMER1
	MOVLW	B'00001001'
	MOVWF	PIR1

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIALIZAÇÃO DAS VARIÁVEIS                 *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ROTINA PRINCIPAL                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
MAIN

	CALL	INIT
	CALL	LETRA_A
	CALL	LETRA_N
	CALL	LETRA_D
	CALL	LETRA_R
	CALL	LETRA_E
	CALL	LETRA_a
	
	GOTO MAIN

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       FIM DO PROGRAMA                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	END



