;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*              MODIFICAÇÕES PARA USO COM 12F675                   *
;*                FEITAS PELO PROF. MARDSON                        *
;*                    FEVEREIRO DE 2016                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       NOME DO PROJETO                           *
;*                           CLIENTE                               *
;*         DESENVOLVIDO PELA MOSAICO ENGENHARIA E CONSULTORIA      *
;*   VERSÃO: 1.0                           DATA: 17/06/03          *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     DESCRIÇÃO DO ARQUIVO                        *
;*-----------------------------------------------------------------*
;*   MODELO PARA O PIC 12F675                                      *
;*                                                                 *
;*                                                                 *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ARQUIVOS DE DEFINIÇÕES                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
#INCLUDE <p12f675.inc>	;ARQUIVO PADRÃO MICROCHIP PARA 12F675

	__CONFIG _BODEN_OFF & _CP_OFF & _PWRTE_ON & _WDT_OFF & _MCLRE_ON & _INTRC_OSC_NOCLKOUT

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    PAGINAÇÃO DE MEMÓRIA                         *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;DEFINIÇÃO DE COMANDOS DE USUÁRIO PARA ALTERAÇÃO DA PÁGINA DE MEMÓRIA
#DEFINE	BANK0	BCF STATUS,RP0	;SETA BANK 0 DE MEMÓRIA
#DEFINE	BANK1	BSF STATUS,RP0	;SETA BANK 1 DE MAMÓRIA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         VARIÁVEIS                               *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
	#DEFINE	    SCL	    GPIO,GP0
	#DEFINE	    SDA	    GPIO,GP1
	#DEFINE	    LED	    GPIO,GP5
	
; DEFINIÇÃO DOS NOMES E ENDEREÇOS DE TODAS AS VARIÁVEIS UTILIZADAS 
; PELO SISTEMA
	

	CBLOCK	0x20	;ENDEREÇO INICIAL DA MEMÓRIA DE
					;USUÁRIO
		W_TEMP		;REGISTRADORES TEMPORÁRIOS PARA USO
		STATUS_TEMP	;JUNTO ÀS INTERRUPÇÕES

		ENDERECO
		DADO
		CONT

	ENDC			;FIM DO BLOCO DE MEMÓRIA
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                        FLAGS INTERNOS                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS FLAGS UTILIZADOS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                         CONSTANTES                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODAS AS CONSTANTES UTILIZADAS PELO SISTEMA

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           ENTRADAS                              *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO ENTRADA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                           SAÍDAS                                *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; DEFINIÇÃO DE TODOS OS PINOS QUE SERÃO UTILIZADOS COMO SAÍDA
; RECOMENDAMOS TAMBÉM COMENTAR O SIGNIFICADO DE SEUS ESTADOS (0 E 1)

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       VETOR DE RESET                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	ORG	0x00			;ENDEREÇO INICIAL DE PROCESSAMENTO
	GOTO	INICIO
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    INÍCIO DA INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; ENDEREÇO DE DESVIO DAS INTERRUPÇÕES. A PRIMEIRA TAREFA É SALVAR OS
; VALORES DE "W" E "STATUS" PARA RECUPERAÇÃO FUTURA

	ORG	0x04			;ENDEREÇO INICIAL DA INTERRUPÇÃO
	MOVWF	W_TEMP		;COPIA W PARA W_TEMP
	SWAPF	STATUS,W
	MOVWF	STATUS_TEMP	;COPIA STATUS PARA STATUS_TEMP

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                    ROTINA DE INTERRUPÇÃO                        *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; AQUI SERÁ ESCRITA AS ROTINAS DE RECONHECIMENTO E TRATAMENTO DAS
; INTERRUPÇÕES

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                 ROTINA DE SAÍDA DA INTERRUPÇÃO                  *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; OS VALORES DE "W" E "STATUS" DEVEM SER RECUPERADOS ANTES DE 
; RETORNAR DA INTERRUPÇÃO

SAI_INT
	SWAPF	STATUS_TEMP,W
	MOVWF	STATUS		;MOVE STATUS_TEMP PARA STATUS
	SWAPF	W_TEMP,F
	SWAPF	W_TEMP,W	;MOVE W_TEMP PARA W
	RETFIE

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*	            	 ROTINAS E SUBROTINAS                      *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
; CADA ROTINA OU SUBROTINA DEVE POSSUIR A DESCRIÇÃO DE FUNCIONAMENTO
; E UM NOME COERENTE ÀS SUAS FUNÇÕES.

DELAY_200MS
	;ZERANDO OS TMR1L E TMR1H
	CLRF	TMR1H
	CLRF	TMR1L
	;COMO NOS DEFINIMOS O VALOR 1875? DA SEGUINTE FORMA: 200MS/(PRESCALER=8)=25000
	MOVLW	B'10011000'	;(65536-25000=40536)
	MOVWF	TMR1H	;(25000*8=200000)
	MOVLW	B'01010011';PARA ISSO DIVIDE OS 16BITS EM 8 EM CASA 
	MOVWF	TMR1L
	BCF PIR1,TMR1IF;ZERA O TMR1IF POR SEGURANÇA
	BTFSS	PIR1,TMR1IF;LOOP ESPERANDO SETAR O TMR1IF
	GOTO	$-1
	RETURN
DESCIDA_SDA
	BTFSC	SDA
	GOTO	DESCIDA_SDA
	RETURN
SUBIDA_SDA
	BTFSS	SDA
	GOTO	SUBIDA_SDA
	RETURN
DESCIDA_SCL
	BTFSC	SCL
	GOTO	DESCIDA_SCL
	RETURN
SUBIDA_SCL
	BTFSS	SCL
	GOTO	SUBIDA_SCL
	RETURN
STOP_BIT
	CALL	SUBIDA_SDA
ESPERA_SCL;AGUARDA SCL MUDAR DO NIVEL BAIXO PARA O NIVEL ALTO
	BTFSC	SCL; O CLOCK ESTÁ BAIXO?
	GOTO	MAIN;NÃO, ENTÃO RETORNA
	GOTO	ESPERA_SCL;SIM,ENTÃO AGUARDA O CLOCK SUBIR
	RETURN
LIGA_LED
	BSF	LED
	RETURN
SAIDA_LIGA_LED
	CALL	DESCIDA_SCL;DESCIDA DO PULSO 8
	BANK1
	BCF	TRISIO,TRISIO1;TRANSFORMANDO O 	SDA EM SAIDA DE DADOS
	BANK0
	BCF	SDA
	
	CALL	SUBIDA_SCL
	CALL	DESCIDA_SCL;PASSOU PELO PULSO 9
	
	BANK1
	BSF	TRISIO,TRISIO1;TRANSFORMANDO O 	SDA EM SAIDA DE DADOS
	BCF	TRISIO,TRISIO0;TRANSFORMANDO O 	SDA EM SAIDA DE DADOS
	BANK0
	BANK0
	BSF	LED
	BCF	SCL
	CALL	DELAY_200MS
	BANK1
	BSF	TRISIO,TRISIO0;TRANSFORMANDO O 	SDA EM SAIDA DE DADOS
	
	BANK0
	RETURN
	
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIO DO PROGRAMA                          *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	
INICIO
	BANK1				;ALTERA PARA O BANCO 1
	MOVLW	B'00000011' ;CONFIGURA TODAS AS PORTAS DO GPIO (PINOS)
	MOVWF	TRISIO		;COMO SAÍDAS
	CLRF	ANSEL 		;DEFINE PORTAS COMO Digital I/O
	MOVLW	B'10000100'
	MOVWF	OPTION_REG	;DEFINE OPÇÕES DE OPERAÇÃO
	MOVLW	B'00000000'
	MOVWF	INTCON		;DEFINE OPÇÕES DE INTERRUPÇÕES
	
	BANK0				;RETORNA PARA O BANCO
	MOVLW	B'00000111'
	MOVWF	CMCON		;DEFINE O MODO DE OPERAÇÃO DO COMPARADOR ANALÓGICO
	MOVLW	B'00110001' ;DEFININDO O PRESCALER DE 1;8 NO TIMER1 (BITS 4 E 5)
	MOVWF	T1CON	;REGISTRADOR DE CONTROLE DO TIMER1
;	MOVLW	B'00000000'
;	MOVWF	PIR1

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     INICIALIZAÇÃO DAS VARIÁVEIS                 *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                     ROTINA PRINCIPAL                            *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
MAIN
	CLRF	GPIO
	;VERIFICANDO O START BIT
	;O START BIT ACONTECE QUANDO O SINAL SDA CAI (PASSA DO SINAL ALTO PARA O BAIXO)
	;E NO MESMO MOMENTO EM QUE O SINAL SCL ESTÃ ALTO
	CALL	SUBIDA_SDA
	CALL	DESCIDA_SDA
	BTFSS	SCL; O CLOCK ESTÁ BAIXO?
	GOTO MAIN; NÃO, ENTÃO OCORREU O START BIT, LOGO 0 DISPOSITIVO ESTÁ PRONTO PARA A TRANSFERENCIA
	;BSF	LED
	;NOP
	;BCF	LED
	MOVLW	.8
	MOVWF	CONT; VARIAVEL RESPONSAVEL PELO CONTROLA DE BITS DE ENTRADA 

	CLRF	DADO
	;BCF	STATUS,C
AGUARDA_CLOCK
	
	BTFSC	SCL;TESTANDO SE O CLOCK ESTÁ EM ZERO
	GOTO	$-1
	BTFSS	SCL
	GOTO	$-1
	;GOTO	AGUARDA_CLOCK; NÃO, ENTÃO AGUARDA 
	BTFSS	SDA
	GOTO	$+3 ;0
	BSF	STATUS,C
	GOTO	$+2	
	BCF	STATUS,C;BIT0=0
	RLF	DADO;ROTACIONA O BIT 
	DECFSZ	CONT;DECREMENTA A VARIAVEL DE CONTROLE DA QUANTIDADE DE BITS
	GOTO	AGUARDA_CLOCK; A VARIAVEL DE CONTROLE NÃO É ZERO ENTÃO RETORNA PARA AGUARDA_CLOCK
	
	
	RRF	DADO
	MOVLW	.37;VALOR DO ENDEREÇO QUE ME FOI SORTEADO
	SUBWF	DADO;SUBTRAI O VALOR DO DADO PELO MEU VALOR DE ENDEREÇO W-F
	BTFSS	STATUS,Z;VERIFICA SE A SUBTRAÇÃO DEU 1, CASO CONTRARIO
	GOTO	MAIN
	CALL	SAIDA_LIGA_LED;LIGA O LED
	
	;VERIFICANDO SE OCORREU O STOP BIT
	;CALL	STOP_BIT
	GOTO	MAIN
	

;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
;*                       FIM DO PROGRAMA                           *
;* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	END



